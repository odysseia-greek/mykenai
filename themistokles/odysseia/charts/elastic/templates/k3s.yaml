{{ if eq .Values.commonConfig.config.environment "production" }}
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}"
    env: {{ .Values.commonConfig.config.environment }}
    variant: {{ .Values.commonConfig.config.kubeVariant }}
    app: {{ .Values.name }}
    version: {{ .Values.config.elasticVersion }}
spec:
  version: {{ .Values.config.elasticVersion }}
  nodeSets:
    - name: masters
      count: 1
      config:
        node.roles: [ "master" ]
        node.store.allow_mmap: false
      podTemplate:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: esMasterEligible
                        operator: In
                        values:
                          - "true"
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: {{ .Values.nodes.memory.requests.medium }}
                  cpu: {{ .Values.nodes.cpu.requests.medium }}
                limits:
                  memory: {{ .Values.nodes.memory.limits.medium }}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.nodes.storage.low }}
    - name: hot
      count: 1
      config:
        node.roles: ["data_hot", "data_content", "ingest"]
        node.store.allow_mmap: false
      podTemplate:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: esHotEligible
                        operator: In
                        values:
                          - "true"
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: {{ .Values.nodes.memory.requests.high }}
                  cpu: {{ .Values.nodes.cpu.requests.high }}
                limits:
                  memory: {{ .Values.nodes.memory.limits.high }}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.nodes.storage.high }}
    - name: warm
      count: 1
      config:
        node.roles: ["data_warm"]
        node.store.allow_mmap: false
      podTemplate:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: esHotEligible
                        operator: In
                        values:
                          - "true"
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: {{ .Values.nodes.memory.requests.medium }}
                  cpu: {{ .Values.nodes.cpu.requests.medium }}
                limits:
                  memory: {{ .Values.nodes.memory.limits.high }}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.nodes.storage.medium }}
{{ end }}
