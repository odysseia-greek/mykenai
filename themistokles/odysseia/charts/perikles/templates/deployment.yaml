{{- include "koinos.deploymentbase" .}}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      initContainers:
        - name: {{ .Values.initName }}
          {{- if .Values.commonConfig.config.externalRepo | quote }}
          image: {{ .Values.commonConfig.images.imageRepo}}{{ .Values.images.init.repo }}:{{ .Values.images.init.tag }}
          {{ else }}
          image: {{ .Values.images.init.repo }}:{{ .Values.images.init.tag }}
          {{- end}}
          imagePullPolicy: {{ .Values.commonConfig.config.pullPolicy }}
          env:
            - name: ENV
              value: "{{ .Values.commonConfig.config.environment }}"
            - name: PERIKLES
              value: perikles
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: {{ .Values.name }}
          {{- if .Values.commonConfig.config.externalRepo | quote }}
          image: {{ .Values.commonConfig.images.imageRepo}}{{ .Values.images.odysseiaapi.repo }}:{{ .Values.images.odysseiaapi.tag }}
          {{ else }}
          image: {{ .Values.images.odysseiaapi.repo }}:{{ .Values.images.odysseiaapi.tag }}
          {{- end}}
          imagePullPolicy: {{ .Values.commonConfig.config.pullPolicy }}
          env:
          - name: ENV
            value: "{{ .Values.commonConfig.config.environment }}"
          - name: PORT
            value: {{ .Values.envVariables.odysseiaapi.port | quote }}
          - name: TLS_FILES
            value: {{ .Values.envVariables.odysseiaapi.TLSFiles }}
          - name: CRD_NAME
            value: {{ .Values.envVariables.odysseiaapi.crdName }}
          - name: CONFIGMAP_NAME
            value: {{ .Values.configMapName }}
          - name: L7_MODE
            value: {{ .Values.config.l7Mode | quote }}
          - name: ELASTIC_SEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: aristoteles-es-elastic-user
                key: elastic
          - name:  ELASTIC_USER
            value: elastic
          - name:  ELASTIC_SEARCH_SERVICE
            value: "{{ .Values.commonConfig.envVariables.elasticService }}"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
            - containerPort: {{ .Values.envVariables.odysseiaapi.port }}
              name: webhook-tcp
          volumeMounts:
            - name: webhook-certs
              mountPath: {{ .Values.envVariables.odysseiaapi.TLSFiles }}
              readOnly: true

            - name: {{ .Values.tlsConfig.elastic.name }}
              mountPath: {{ .Values.tlsConfig.elastic.path }}
              readOnly: true
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /perikles/v1/ping
              port: {{ .Values.envVariables.odysseiaapi.port }}
            initialDelaySeconds: {{ .Values.commonConfig.config.initialDelayLiveness }}
            periodSeconds: {{ .Values.commonConfig.config.periodSeconds }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /perikles/v1/ping
              port: {{ .Values.envVariables.odysseiaapi.port }}
            initialDelaySeconds: {{ .Values.commonConfig.config.initialDelayReadiness }}
            periodSeconds: {{ .Values.commonConfig.config.periodSeconds }}
          resources:
            requests:
              memory: {{ .Values.services.perikles.requests.memory }}
              cpu: {{ .Values.services.perikles.requests.cpu }}
            limits:
              memory: {{.Values.services.perikles.limits.memory}}
      volumes:
        - name: webhook-certs
          secret:
            secretName: perikles-certs
        - name: {{ .Values.tlsConfig.elastic.name }}
          secret:
            secretName: {{ .Values.tlsConfig.elastic.secretName }}