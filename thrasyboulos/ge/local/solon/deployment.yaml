apiVersion: apps/v1
kind: Deployment
metadata:
  name: solon
  labels:
    heritage: "Helm"
    release: "solon"
    chart: "solon"
    env: k3d
    variant: k3d
    app: solon
    domain: "backend"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solon
  template:
    metadata:
      labels:
        app: solon
        release: solon
        version: v0.1.4
      annotations:
        elastic/indices: "dictionary;grammar;text;quiz;tracing;metrics;aggregator"
        elastic/roles: "api;seeder;hybrid;creator;alias"
        perikles/hostname: "solon"
        perikles/validity: "365"
    spec:
      serviceAccountName: solon-access-sa
      initContainers:
        - name: peisistratos
          image: ghcr.io/odysseia-greek/peisistratos:v0.1.3
          
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AUTH_METHOD
              value: token
            - name: CERT_ROOT
              value: /app/config
          envFrom:
            - configMapRef:
                name: solon
          volumeMounts:
            - name: vault-server-tls
              mountPath: /app/config/vault
              readOnly: true
      containers:        
        - name: "aristophanes"
          image: ghcr.io/odysseia-greek/aristophanes:v0.6.3
          
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ELASTIC_SEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: agreus-elastic
                  key: user
            - name: ELASTIC_SEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: agreus-elastic
                  key: password
          envFrom:
            - configMapRef:
                name: solon
          ports:
            - containerPort: 50052
          imagePullPolicy: Always
          resources:
            requests:
              memory: 32Mi
              cpu: 50m
            limits:
              memory: 64Mi
          volumeMounts:
            - name: elastic-internal-tls
              mountPath: /app/config/elastic
              readOnly: true        
        - name: "sophokles"
          image: ghcr.io/odysseia-greek/sophokles:v0.1.0
          
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: solon
          ports:
            - containerPort: 50053
          imagePullPolicy: Always
          resources:
            requests:
              memory: 32Mi
              cpu: 50m
            limits:
              memory: 64Mi
          volumeMounts:
            - name: elastic-internal-tls
              mountPath: /app/config/elastic
              readOnly: true
        - name: "solon"
          image: ghcr.io/odysseia-greek/solon:v0.1.4
          
          imagePullPolicy: Always
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AUTH_METHOD
            value: kubernetes
          - name: CERT_ROOT
            value: /app/config
          - name: ELASTIC_SEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: aristoteles-es-elastic-user
                key: elastic
          envFrom:
            - configMapRef:
                name: solon
          volumeMounts:
            - name: vault-server-tls
              mountPath: /app/config/vault
              readOnly: true
            - name: elastic-internal-tls
              mountPath: /app/config/elastic
              readOnly: true
            - name: solon-certs
              mountPath: /app/config/solon
              readOnly: true
          ports:
            - containerPort: 5443
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /solon/v1/health
              port: 5443
            initialDelaySeconds: 20
            periodSeconds: 20
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /solon/v1/health
              port: 5443
            initialDelaySeconds: 1
            periodSeconds: 20
          resources:
            requests:
              memory: 64Mi
              cpu: 200m
            limits:
              memory: 256Mi
      volumes:
        - name: vault-server-tls
          secret:
            secretName: vault-server-tls
        - name: elastic-internal-tls
          secret:
            secretName: aristoteles-es-http-certs-public
        - name: solon-certs
          secret:
            secretName: solon-tls-certs